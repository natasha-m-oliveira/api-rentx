{
  "openapi": "3.0.0",
  "info": {
    "title": "RentX Documentation",
    "description": "This is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "natasha.oliveirabusiness@gmail.com"
    }
  },
  "paths": {
    "/api/v1/sessions": {
      "post": {
        "tags": ["Session"],
        "summary": "Authentication user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "tul@ohoacaeji.yt",
                  "password": "183091"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Email or password incorrect"
          }
        }
      }
    },
    "/api/v1/refresh-token": {
      "post": {
        "tags": ["Session"],
        "summary": "Refresh token",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "query",
            "description": "Refresh token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-refresh-token",
            "in": "header",
            "description": "Refresh token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "example": {
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Invalid refresh token!"
          }
        }
      }
    },
    "/api/v1/brands": {
      "post": {
        "tags": ["Brands"],
        "summary": "Create a brand",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Brand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Brand already exists"
          }
        }
      },
      "get": {
        "tags": ["Brands"],
        "summary": "List all brands",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Brands"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create a category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Categories"],
        "summary": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Categories"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/import": {
      "post": {
        "tags": ["Categories"],
        "summary": "Upload a new category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/v1/specifications": {
      "post": {
        "tags": ["Specifications"],
        "summary": "Create a specification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Specification already exists"
          }
        }
      },
      "get": {
        "tags": ["Specifications"],
        "summary": "List all specifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Specifications"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cars": {
      "post": {
        "tags": ["Cars"],
        "summary": "Create a car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Car already exists"
          },
          "404": {
            "description": "Category or brand not found"
          }
        }
      }
    },
    "/api/v1/cars/{id}/images": {
      "post": {
        "tags": ["Cars"],
        "summary": "Upload images",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Car not found"
          }
        }
      }
    },
    "/api/v1/cars/{id}/specifications": {
      "post": {
        "tags": ["Cars"],
        "summary": "Create car specifications",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specifications_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "specifications_id": ["a043d6a0-ba4b-47cb-abf7-2b582a1ab0a2"]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Car not found"
          }
        }
      }
    },
    "/api/v1/cars/{id}": {
      "get": {
        "tags": ["Cars"],
        "summary": "Get specification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/cars/available": {
      "get": {
        "tags": ["Cars"],
        "summary": "List available cars",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Car name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "Category id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand_id",
            "in": "query",
            "description": "Brand id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Cars"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "User already exists"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Upload avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Show profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/rentals": {
      "post": {
        "tags": ["Rentals"],
        "summary": "Create a rental",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Rental"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "User or car not found"
          },
          "400": {
            "description": "Car is unavailable or there's a rental in progress for user"
          }
        }
      }
    },
    "/api/v1/rentals/{id}/devolution": {
      "post": {
        "tags": ["Rentals"],
        "summary": "Devolution rental",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rental id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Rental not found"
          }
        }
      }
    },
    "/api/v1/rentals/user": {
      "get": {
        "tags": ["Rentals"],
        "summary": "List rentals by user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/password/forgot": {
      "post": {
        "tags": ["Password"],
        "summary": "Send forgot password mail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "tul@ohoacaeji.yt"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/password/reset": {
      "post": {
        "tags": ["Password"],
        "summary": "Reset user password",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "password": "eb8C8fR7bE"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "Brand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "Hyundai"
      }
    },
    "Brands": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "name": "SUV",
        "description": "Utilitário esportivo é um veículo automotor de porte avantajado derivado da camionete."
      }
    },
    "Categories": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      }
    },
    "Specification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "name": "Direção mecânica",
        "description": "Direção robusta, menor apresentação de defeitos"
      }
    },
    "Specifications": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "daily_rate": {
          "type": "number"
        },
        "license_plate": {
          "type": "string"
        },
        "fine_amount": {
          "type": "number"
        },
        "brand_id": {
          "type": "string"
        },
        "category_id": {
          "type": "string"
        }
      },
      "example": {
        "name": {
          "type": "Jimny Sierra"
        },
        "description": "Opção inédita que surgiu na quarta geração do jipe, o Jimny Sierra traz uma carroceria ligeiramente maior em relação ao Jimny convencional.",
        "daily_rate": "659.99",
        "license_plate": "MYT-7186",
        "fine_amount": "52.79",
        "brand_id": "20bb2d48-25f2-471d-a797-16b480de603c",
        "category_id": "2e9edc02-59ab-41c7-b090-745f6a35b6e6"
      }
    },
    "Cars": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "daily_rate": {
            "type": "string"
          },
          "license_plate": {
            "type": "string"
          },
          "fine_amount": {
            "type": "string"
          },
          "brand_id": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "driver_license": {
          "type": "string"
        }
      },
      "example": {
        "name": "Gene Sandoval",
        "email": "tul@ohoacaeji.yt",
        "password": "183091",
        "driver_license": "29604814967"
      }
    },
    "Rental": {
      "type": "object",
      "properties": {
        "expected_return_date": {
          "type": "string"
        },
        "car_id": {
          "type": "string"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
